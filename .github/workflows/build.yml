name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - {os: ubuntu-22.04, python-version: "3.7"}
        - {os: ubuntu-latest, python-version: "3.8"}
        - {os: ubuntu-latest, python-version: "3.9"}
        - {os: ubuntu-latest, python-version: "3.10"}
        - {os: ubuntu-latest, python-version: "3.11"}
        - {os: ubuntu-latest, python-version: "3.12"}
        - {os: ubuntu-latest, python-version: "3.13"}
        - {os: macos-latest, python-version: "3.9"}
        - {os: macos-latest, python-version: "3.10"}
        - {os: macos-latest, python-version: "3.11"}
        - {os: macos-latest, python-version: "3.12"}
        - {os: macos-latest, python-version: "3.13"}
        - {os: windows-latest, python-version: "3.7"}
        - {os: windows-latest, python-version: "3.8"}
        - {os: windows-latest, python-version: "3.9"}
        - {os: windows-latest, python-version: "3.10"}
        - {os: windows-latest, python-version: "3.11"}
        - {os: windows-latest, python-version: "3.12"}
        - {os: windows-latest, python-version: "3.13"}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      shell: bash
      run: |
        python -mpip install --upgrade pip setuptools wheel &&
        python -mpip install . &&
        python -mpip list &&
        if [[ '${{ matrix.python-version }}' = 3.8 ]]; then
          pip install numpy pyfftw  # pyfftw wheels only available up to py3.8
        fi
    - name: Test
      shell: bash
      run: |
        python -munittest -v
